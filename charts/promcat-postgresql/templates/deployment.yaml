apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "promcat-postgresql.exporterDeploymentName" . }}
  labels:
    {{- include "promcat-postgresql.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "promcat-postgresql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "promcat-postgresql.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: 9187
          readinessProbe:
            httpGet:
              path: /
              port: 9187
          env:
            - name: DATA_SOURCE_URI
              value: {{ include "promcat-postgresql.connectionString" . }}
            - name: DATA_SOURCE_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "promcat-postgresql.configMapName" . }}
                  key: POSTGRES_EXPORTER_USER
            - name: DATA_SOURCE_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "promcat-postgresql.secretName" . }}
                  key: POSTGRES_EXPORTER_PASSWORD
            - name: PG_EXPORTER_EXTEND_QUERY_PATH
              value: /tmp/queries.yaml
            - name: PG_EXPORTER_DISABLE_SETTINGS_METRICS
              value: {{ .Values.exporterParams.disableSettingsMetrics | quote }}
            - name: PG_EXPORTER_EXCLUDE_DATABASES
              value: {{ .Values.exporterParams.excludeDatabases | quote }}
            - name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
              value: {{ .Values.exporterParams.autoDiscoverDatabases | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: postgres-queries
              mountPath: /tmp/queries.yaml
              subPath: queries.yaml
            {{- if .Values.dbInstance.sslRootCertEnabled }}
            - name: ssl-root-cert
              mountPath: /var/lib/postgresql/ssl-root-cert.pem
              subPath: ssl-root-cert.pem
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ include "promcat-postgresql.queriesName" . }}
          name: postgres-queries
        {{- if .Values.dbInstance.sslRootCertEnabled }}
        - name: ssl-root-cert
          secret:
            defaultMode: 420
            secretName: {{ include "promcat-postgresql.secretName" . }}
            items:
              - key: postgres-ssl-root-cert
                path: ssl-root-cert.pem
        {{- end }}